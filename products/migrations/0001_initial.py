# Generated by Django 5.2.5 on 2025-08-08 14:07

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('old_slug', models.SlugField(blank=True, default='', help_text='Legacy slug field (can be ignored)', max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='products_ca_name_693421_idx'), models.Index(fields=['slug'], name='products_ca_slug_da4386_idx'), models.Index(fields=['created_at'], name='products_ca_created_c2504d_idx'), models.Index(fields=['slug'], name='category_slug_idx')],
                'constraints': [models.UniqueConstraint(fields=('slug',), name='unique_category_slug')],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('description', models.TextField()),
                ('price', models.DecimalField(db_index=True, decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('stock', models.PositiveIntegerField(db_index=True, default=0)),
                ('available', models.BooleanField(db_index=True, default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('featured', models.BooleanField(default=False, verbose_name='Featured Product')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='products.category')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'permissions': [('can_view_product', 'Can view product details'), ('can_create_product', 'Can create new products'), ('can_edit_product', 'Can edit existing products'), ('can_delete_product', 'Can remove products')],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='product_images/', verbose_name='Additional Image')),
                ('alt_text', models.CharField(blank=True, help_text='Alternative text for accessibility', max_length=100)),
                ('is_featured', models.BooleanField(default=False, help_text='Mark as featured image for this product')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.product')),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
                'ordering': ['-is_featured', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], db_index=True)),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='products.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name', 'category'], name='products_pr_name_08fd2e_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category', 'available'], name='products_pr_categor_d726ba_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['price', 'available'], name='products_pr_price_00610c_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['-created_at'], name='products_pr_created_bce1a7_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['stock'], name='products_pr_stock_4d23d5_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['slug'], name='product_slug_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(condition=models.Q(('available', True)), fields=['available'], name='idx_available_products'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(condition=models.Q(('price__gt', 100)), fields=['price'], name='idx_price_gt_100'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(condition=models.Q(('available', True)), fields=['available', 'category'], name='idx_available_by_category'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.UniqueConstraint(fields=('slug',), name='unique_product_slug'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['product', 'created_at'], name='products_re_product_0fc5ab_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['product', 'rating'], name='products_re_product_439051_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['user', 'created_at'], name='products_re_user_id_16fa90_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(condition=models.Q(('rating__gte', 4)), fields=['rating'], name='idx_high_ratings'),
        ),
        migrations.AddConstraint(
            model_name='review',
            constraint=models.UniqueConstraint(fields=('product', 'user'), name='unique_user_review_per_product'),
        ),
    ]
