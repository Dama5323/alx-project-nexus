# Generated by Django 5.2.5 on 2025-08-08 14:07

import accounts.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(db_index=True, help_text='Email will be automatically converted to lowercase.', max_length=254, unique=True, verbose_name='email address')),
                ('date_of_birth', models.DateField(blank=True, help_text='Format: YYYY-MM-DD. Must be at least 13 years old.', null=True, validators=[accounts.models.validate_date_of_birth])),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to=accounts.models.user_profile_photo_path, verbose_name='Profile Photo')),
                ('failed_login_attempts', models.PositiveIntegerField(default=0, help_text='Number of consecutive failed login attempts')),
                ('last_failed_login', models.DateTimeField(blank=True, help_text='Timestamp of last failed login attempt', null=True)),
                ('account_locked_until', models.DateTimeField(blank=True, help_text='Timestamp until account is locked', null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_users', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'permissions': [('can_view_dashboard', 'Can view admin dashboard'), ('can_manage_users', 'Can manage other users'), ('can_unlock_accounts', 'Can unlock user accounts')],
                'indexes': [models.Index(fields=['email'], name='user_email_idx'), models.Index(fields=['date_joined'], name='user_joined_idx'), models.Index(fields=['is_active', 'date_joined'], name='user_active_joined_idx'), models.Index(fields=['first_name', 'last_name'], name='user_name_search_idx'), models.Index(condition=models.Q(('date_of_birth__isnull', False)), fields=['date_of_birth'], name='user_dob_idx'), models.Index(condition=models.Q(('is_active', True)), fields=['email'], name='active_user_email_idx')],
            },
        ),
    ]
