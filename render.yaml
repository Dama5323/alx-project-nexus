services:
  - type: web
    name: djangocommerce-web
    runtime: python
    pythonVersion: "3.10.6"
    buildCommand: |
      pip install --upgrade pip
      pip install -r requirements.txt
      python manage.py migrate
      python manage.py collectstatic --noinput
    startCommand: gunicorn your_project.wsgi:application --workers 4 --timeout 120 --bind 0.0.0.0:$PORT
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: your_project.settings
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: "False"
      - key: DISABLE_COLLECTSTATIC
        value: "0"
    healthCheckPath: /health/
    database:
      name: djangocommerce-db
      postgresVersion: "14"

  - type: worker
    name: djangocommerce-celery-worker
    runtime: python
    pythonVersion: "3.10.6"
    buildCommand: |
      pip install --upgrade pip
      pip install -r requirements.txt
    startCommand: celery -A your_project worker --loglevel=info --concurrency=4
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: your_project.settings
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: djangocommerce-redis
          property: connectionString

  - type: worker
    name: djangocommerce-celery-beat
    runtime: python
    pythonVersion: "3.10.6"
    buildCommand: |
      pip install --upgrade pip
      pip install -r requirements.txt
    startCommand: celery -A your_project beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: your_project.settings
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: djangocommerce-redis
          property: connectionString

databases:
  - name: djangocommerce-db
    plan: free
    postgresVersion: "14"

services:
  - type: redis
    name: djangocommerce-redis
    plan: free