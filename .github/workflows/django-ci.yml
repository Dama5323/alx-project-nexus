name: Django CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres123
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Find project structure
      id: project-config
      run: |
        MANAGEPY_DIR=$(dirname $(find . -name manage.py -print -quit))
        SETTINGS_PATH=$(find . -name settings.py -not -path "*/tests/*" -print -quit)
        SETTINGS_MODULE=$(echo ${SETTINGS_PATH#./} | sed 's/.py$//' | tr '/' '.')
        echo "PROJECT_ROOT=${MANAGEPY_DIR#./}" >> $GITHUB_ENV
        echo "SETTINGS_MODULE=$SETTINGS_MODULE" >> $GITHUB_ENV
        echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
        echo "Project root: $MANAGEPY_DIR"
        echo "Settings module: $SETTINGS_MODULE"

    - name: Wait for Postgres to be ready
      run: |
        until pg_isready -h localhost -p 5432; do
          echo "Waiting for Postgres..."
          sleep 1
        done

    - name: Reset test database
      env:
        PGPASSWORD: postgres123
      run: |
        psql -h localhost -U postgres -c "DROP DATABASE IF EXISTS test_db;"
        psql -h localhost -U postgres -c "CREATE DATABASE test_db;"

    - name: Apply migrations
      env:
        DB_NAME: test_db
        DB_USER: postgres
        DB_PASSWORD: postgres123
        DB_HOST: localhost
        DB_PORT: 5432
        DJANGO_SETTINGS_MODULE: ${{ env.SETTINGS_MODULE }}
      run: |
        cd "$PROJECT_ROOT"
        python manage.py migrate --noinput
    
    - name: Run tests
      env:
        DB_NAME: test_db
        DB_USER: postgres
        DB_PASSWORD: postgres123
        DB_HOST: localhost
        DB_PORT: 5432
        REDIS_URL: redis://localhost:6379/0
        DJANGO_SETTINGS_MODULE: ${{ env.SETTINGS_MODULE }}
      run: |
        cd "$PROJECT_ROOT"
        python manage.py test --verbosity=2